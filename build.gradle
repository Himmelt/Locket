apply plugin: 'java'

version = '1.3.0-SNAPSHOT'
group = 'org.soraworld'

sourceCompatibility = targetCompatibility = 1.8

configurations.all {
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

repositories {
    maven { url = 'https://maven.aliyun.com/repository/public/' }
    jcenter()
    maven { url = 'https://oss.jfrog.org/artifactory/oss-snapshot-local/' }
    maven { url = 'https://hub.spigotmc.org/nexus/content/groups/public/' }
    maven { url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/' }
    maven { url 'https://soraworld-maven.pkg.coding.net/repository/minecraft/public/' }
}

dependencies {
    compileOnly 'org.soraworld:violet-api:2.5.0-SNAPSHOT'
}

subprojects {
    apply plugin: 'java'
    apply plugin: "maven-publish"

    group rootProject.group
    version rootProject.version

    sourceCompatibility = targetCompatibility = 1.8

    configurations.all {
        resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
    }

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }

    repositories {
        maven { url = 'https://maven.aliyun.com/repository/public/' }
        jcenter()
        maven { url = 'https://oss.jfrog.org/artifactory/oss-snapshot-local/' }
        maven { url = 'https://hub.spigotmc.org/nexus/content/groups/public/' }
        maven { url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/' }
        maven { url 'https://soraworld-maven.pkg.coding.net/repository/minecraft/public/' }
    }

    configurations {
        shadow
        compile.extendsFrom(shadow)
    }

    dependencies {
        shadow rootProject
    }

    jar {
        configurations.shadow.copyRecursive().setTransitive(false).each {
            artifact -> from(zipTree(artifact))
        }
        includeEmptyDirs = false
    }

    publishing {
        repositories {
            maven {
                name = "locket"
                url = uri("https://maven.pkg.github.com/himmelt/locket")
                credentials {
                    username = 'Himmelt'
                    password = System.getenv("PACKAGES_TOKEN")
                }
            }
        }
    }
}
